var searchIndex = new Map(JSON.parse('[\
["bobashare",{"doc":"A simple ephemeral file sharing service. This crate …","t":"HCCIGGPPPGPPNNNNNNNNOONNOONNNNNNNNNNNNNNNONNNNNNNNNNNNNNNCNNNFNNNNOONNOONNNONNNNNNCCCPGPPPPGPPPPGPPFPPGPPPPPPPGPPPPPPGPPPPGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPFPNNNNNOONNNNNNNNNOONNNNNNNNNNFNNNNOONOONNONNONNNNN","n":["generate_randomized_id","serde","storage","LatestUploadMetadata","MigrateError","MigrateErrorV0","ParseMime","Unknown","UnknownVersion","UploadMetadata","V0","V0","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","creation_date","delete_key","deserialize","eq","expiry_date","filename","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_upload","into","into","into","into_migrated_upload","mimetype","serialize","source","source","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","v0","vzip","vzip","vzip","UploadV0","borrow","borrow_mut","clone","clone_into","creation_date","delete_key","deserialize","eq","expiry_date","filename","fmt","from","into","mimetype","serialize","to_owned","try_from","try_into","type_id","vzip","file","handle","upload","AlreadyExists","CleanupError","CreateDirectory","CreateDirectory","CreateLockFile","CreateMetadataFile","CreateUploadError","CreateUploadFile","DeleteDirectory","DeleteFile","DeleteMetadata","DeleteUploadError","DeserializeMetadata","Expired","FileBackend","Invalid","InvalidMetadata","InvalidReason","Locked","Locked","Locked","MigrateMetadata","MigrateMetadata","MissingFile","MissingMetadata","NewBackendError","NextEntry","NotADirectory","NotFound","NotFound","OpenFile","OpenMetadata","OpenUploadError","ReadDir","ReadMetadata","ReadMetadata","Valid","ValidateError","ValidateResult","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cleanup","clone","clone_into","create_upload","delete_upload","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","into","into","into","into","into","into","into","into","into","new","open_upload","path","read_upload_metadata","source","source","source","source","source","source","source","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_upload","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FlushFile","FlushMetadata","FlushUploadError","RemoveLock","Serialize","UploadHandle","WriteMetadata","borrow","borrow","borrow_mut","borrow_mut","drop_lock","file","file_path","flush","fmt","fmt","fmt","from","from","from","into","into","metadata","path","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Upload","borrow","borrow_mut","clone","clone_into","creation_date","delete_key","eq","expiry_date","filename","fmt","from","id","into","is_expired","mimetype","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"bobashare"],[3,"bobashare::serde"],[61,"bobashare::serde::v0"],[82,"bobashare::storage"],[85,"bobashare::storage::file"],[244,"bobashare::storage::handle"],[279,"bobashare::storage::upload"],[300,"alloc::string"],[301,"core::result"],[302,"serde::de"],[303,"core::fmt"],[304,"core::fmt"],[305,"serde::ser"],[306,"core::error"],[307,"core::option"],[308,"core::any"],[309,"mime"],[310,"core::convert"],[311,"serde_json::error"],[312,"std::path"],[313,"std::io::error"]],"d":["Generate a randomized (alphanumeric) ID for an upload with …","Methods to serialize <code>Upload</code>s using <code>serde_json</code>","Modules that handle storing uploaded files and serialized …","The latest upload metadata version","Errors that could occur while migrating an upload (during …","Errors when migrating from <code>UploadV0</code>","error parsing <code>mimetype</code> field","","unknown upload version","All the versions of upload metadata","","error migrating from V0","","","","","","","","","date the upload was created","secret key needed to delete the upload before its expiry","","","date the upload expires, or <code>None</code> if never","name of the uploaded file","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Convert an upload into the latest metadata version","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Convert <code>UploadMetadata</code> into an <code>Upload</code>, migrating it if …","MIME type of the uploaded file","","","","","","","","","","","","","","","","Version 1","","","","A serializable form of <code>Upload</code>, version 1","","","","","date the upload was created","secret key needed to delete the upload before its expiry","","","date the upload expires, or <code>None</code> if never","name of the uploaded file","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","MIME type of the uploaded file","","","","","","","A backend where uploads are stored as files on disk","Methods to create a handle (RAII guard) to interact with …","Type that stores information (metadata) about an upload, …","an upload with the requested name already exists","Errors when running a repository cleanup task","error creating directory for file backend","error creating parent directory for the upload","error creating lock file","error creating metadata file","Errors when creating an upload in a file backend","error creating file for upload contents","error deleting upload directory","error deleting upload file","error deleting metadata file","Errors when deleting an upload stored in a file backend","error deserializing upload metadata","the upload has expired","A directory on disk which is used to store uploads","the upload is invalid and should be deleted","the upload metadata isn’t valid or cannot be deserialized","Reasons why an upload might be invalid and need to be …","the upload is locked","the upload is locked","the upload is locked","error while migrating upload metadata to latest version","failed to migrate metadata","the upload is missing a file","the upload is missing metadata.json","Errors when creating a new <code>FileBackend</code>","error reading next directory entry","the file <code>{0}</code> is not a directory","the upload was not found","an upload at the specified id was not found","error while opening upload file","failed to open metadata file","Errors when opening an upload stored in a file backend","error reading directory","error checking if backend path is directory","error while reading metadata file","the upload is valid","Critical errors when validating an upload that mean we can…","","","","","","","","","","","","","","","","","","","","Validate all the uploads in the repository and delete ones …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Construct a file backend, creating the directory if it …","does not check if the upload is expired, do that yourself","path of the directory containing all uploads","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","error flushing upload file to disk","error flushing metadata to disk","Errors when flushing the upload metadata to disk","error removing lock file","error while serializing with serde_json","Make sure to call <code>Self::flush</code> or else the metadata won’t …","error writing metadata to file","","","","","Consume the handle, and just delete the lock file. Note …","reference to the open uploaded file","path of the uploaded file","Consume the handle, gracefully close the uploaded file, …","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","info about the upload, see <code>Upload</code>","path to the upload directory","","","","","","","","","","","Metadata about an upload","","","","","date the upload was created","secret key needed to delete the upload before it expires","","date the upload expires, or <code>None</code> if never","name of the uploaded file","","Returns the argument unchanged.","ID of the upload","Calls <code>U::from(self)</code>.","Check whether or not the upload is expired.","MIME type of the uploaded file","","","","",""],"i":[0,0,0,0,0,0,10,3,11,0,3,11,3,10,11,3,10,11,3,3,37,37,3,3,37,37,3,10,10,11,11,3,10,10,11,11,3,3,10,11,3,37,3,10,11,3,10,11,3,10,11,3,10,11,3,10,11,0,3,10,11,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,0,24,0,28,24,24,24,0,24,27,27,27,0,29,32,0,31,32,0,29,31,32,29,30,32,32,0,20,28,29,27,29,30,0,20,28,29,31,0,0,28,19,24,29,27,30,31,32,20,28,19,24,29,27,30,31,32,20,19,19,19,19,19,19,28,28,19,24,24,29,29,27,27,30,30,31,31,32,32,20,20,28,19,24,29,29,29,27,30,30,31,32,32,20,28,19,24,29,27,30,31,32,20,19,19,19,19,28,24,29,27,30,32,20,19,28,24,29,27,30,31,32,20,28,19,24,29,27,30,31,32,20,28,19,24,29,27,30,31,32,20,28,19,24,29,27,30,31,32,20,19,28,19,24,29,27,30,31,32,20,36,36,0,36,36,0,36,23,36,23,36,23,23,23,23,23,36,36,23,36,36,23,36,23,23,36,36,23,36,23,36,23,36,23,36,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13],"f":[[1,2],0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,3],[[-1,-2],4,[],[]],0,0,[-1,[[5,[3]]],6],[[3,3],7],0,0,[[3,8],9],[[10,8],9],[[10,8],9],[[11,8],9],[[11,8],9],[-1,-1,[]],[-1,-1,[]],[12,10],[10,11],[-1,-1,[]],[13,3],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[3,2],[[5,[[4,[13,7]],11]]]],0,[[3,-1],5,14],[10,[[16,[15]]]],[11,[[16,[15]]]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[[-1,-2],4,[],[]],0,0,[-1,[[5,[18]]],6],[[18,18],7],0,0,[[18,8],9],[-1,-1,[]],[-1,-2,[],[]],0,[[18,-1],5,14],[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[19,[[5,[4,20]]]],[19,19],[[-1,-2],4,[],[]],[[19,-1,-1,21,[16,[22]],[16,[2]]],[[5,[23,24]]],[[26,[25]]]],[[19,-1],[[5,[4,27]]],[[26,[25]]]],[[19,19],7],[[28,8],9],[[28,8],9],[[19,8],9],[[24,8],9],[[24,8],9],[[29,8],9],[[29,8],9],[[27,8],9],[[27,8],9],[[30,8],9],[[30,8],9],[[31,8],9],[[31,8],9],[[32,8],9],[[32,8],9],[[20,8],9],[[20,8],9],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,29],[11,29],[-1,-1,[]],[11,30],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[33,32],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[34,[[5,[19,28]]]],[[19,-1,7],[[5,[23,29]]],[[26,[25]]]],0,[[19,-1],[[5,[13,29]]],[[26,[25]]]],[28,[[16,[15]]]],[24,[[16,[15]]]],[29,[[16,[15]]]],[27,[[16,[15]]]],[30,[[16,[15]]]],[32,[[16,[15]]]],[20,[[16,[15]]]],[-1,-2,[],[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,2,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[-1,17,[]],[[19,-1],[[5,[31,30]]],[[26,[25]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[23,[[5,[4,35]]]],0,0,[23,[[5,[13,36]]]],[[23,8],9],[[36,8],9],[[36,8],9],[-1,-1,[]],[33,36],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[36,[[16,[15]]]],[-1,2,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,17,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[13,13],[[-1,-2],4,[],[]],0,0,[[13,13],7],0,0,[[13,8],9],[-1,-1,[]],0,[-1,-2,[],[]],[13,7],0,[-1,-2,[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,17,[]],[-1,-2,[],[]]],"c":[],"p":[[1,"usize"],[5,"String",300],[6,"UploadMetadata",3],[1,"tuple"],[6,"Result",301],[10,"Deserializer",302],[1,"bool"],[5,"Formatter",303],[8,"Result",303],[6,"MigrateErrorV0",3],[6,"MigrateError",3],[5,"FromStrError",304],[5,"Upload",279],[10,"Serializer",305],[10,"Error",306],[6,"Option",307],[5,"TypeId",308],[5,"UploadV0",61],[5,"FileBackend",85],[6,"CleanupError",85],[5,"Mime",304],[8,"Duration",309],[5,"UploadHandle",244],[6,"CreateUploadError",85],[1,"str"],[10,"AsRef",310],[6,"DeleteUploadError",85],[6,"NewBackendError",85],[6,"OpenUploadError",85],[6,"ValidateError",85],[6,"ValidateResult",85],[6,"InvalidReason",85],[5,"Error",311],[5,"PathBuf",312],[5,"Error",313],[6,"FlushUploadError",244],[8,"LatestUploadMetadata",3]],"b":[[27,"impl-Debug-for-MigrateErrorV0"],[28,"impl-Display-for-MigrateErrorV0"],[29,"impl-Display-for-MigrateError"],[30,"impl-Debug-for-MigrateError"],[148,"impl-Debug-for-NewBackendError"],[149,"impl-Display-for-NewBackendError"],[151,"impl-Display-for-CreateUploadError"],[152,"impl-Debug-for-CreateUploadError"],[153,"impl-Display-for-OpenUploadError"],[154,"impl-Debug-for-OpenUploadError"],[155,"impl-Debug-for-DeleteUploadError"],[156,"impl-Display-for-DeleteUploadError"],[157,"impl-Display-for-ValidateError"],[158,"impl-Debug-for-ValidateError"],[159,"impl-Debug-for-ValidateResult"],[160,"impl-Display-for-ValidateResult"],[161,"impl-Display-for-InvalidReason"],[162,"impl-Debug-for-InvalidReason"],[163,"impl-Display-for-CleanupError"],[164,"impl-Debug-for-CleanupError"],[169,"impl-From%3CError%3E-for-OpenUploadError"],[170,"impl-From%3CMigrateError%3E-for-OpenUploadError"],[260,"impl-Display-for-FlushUploadError"],[261,"impl-Debug-for-FlushUploadError"]]}],\
["bobashare_admin",{"doc":"Admin CLI for managing bobashare","t":"PFGPNNNNNNNNCNNNNNONNNNNNNNNNNNNHONNNNNNNNNNNNNNCCFNNNNHNNNNNNNNNNNNNNNFPGPNNNNNNNNNNNNHONNNNNNNNNNNNOONNNNNNNNNNNNNNOO","n":["Cleanup","Cli","Command","CreateUpload","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","cli","clone","clone","clone_into","clone_into","command","command","command_for_update","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","main","root","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","cleanup","create","Cleanup","augment_args","augment_args_for_update","borrow","borrow_mut","cleanup","clone","clone_into","fmt","from","from_arg_matches","from_arg_matches_mut","group_id","into","to_owned","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip","CreateUpload","Name","NameOptions","Random","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","create_upload","expiry","fmt","fmt","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","into","into","name","source_file","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","length","name"],"q":[[0,"bobashare_admin"],[48,"bobashare_admin::cli"],[50,"bobashare_admin::cli::cleanup"],[71,"bobashare_admin::cli::create"],[117,"bobashare_admin::cli::create::NameOptions"],[119,"clap_builder::builder::command"],[120,"core::fmt"],[121,"core::fmt"],[122,"clap_builder"],[123,"core::result"],[124,"clap_builder::util::id"],[125,"core::option"],[126,"anyhow"],[127,"core::any"],[128,"bobashare::storage::file"]],"d":["","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","Use a specific name for the upload","","Use a randomized name for the upload","","","","","","","","","","","","","","How long (in days) before the upload expires and is …","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The length of name to randomly generate",""],"i":[3,0,0,3,2,2,3,3,2,3,2,3,0,2,3,2,3,2,2,2,2,3,2,3,2,3,2,3,2,3,2,3,0,2,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,17,17,17,17,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,19,0,19,18,18,19,19,18,19,18,19,18,19,18,19,0,18,18,19,18,19,18,19,18,19,18,19,18,19,18,18,18,19,18,19,18,19,18,19,18,19,18,19,18,19,20,21],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[],1],0,[[],1],[[2,5],6],[[3,5],6],[-1,-1,[]],[-1,-1,[]],[7,[[9,[2,8]]]],[7,[[9,[3,8]]]],[7,[[9,[2,8]]]],[7,[[9,[3,8]]]],[[],[[11,[10]]]],[12,13],[-1,-2,[],[]],[-1,-2,[],[]],[[],[[14,[4]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[2,7],[[9,[4,8]]]],[[3,7],[[9,[4,8]]]],[[2,7],[[9,[4,8]]]],[[3,7],[[9,[4,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[[16,17],[[14,[4]]]],[17,17],[[-1,-2],4,[],[]],[[17,5],6],[-1,-1,[]],[7,[[9,[17,8]]]],[7,[[9,[17,8]]]],[[],[[11,[10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[[17,7],[[9,[4,8]]]],[[17,7],[[9,[4,8]]]],[-1,-2,[],[]],0,0,0,0,[1,1],[1,1],[1,1],[1,1],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[18,18],[19,19],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[16,18],[[14,[4]]]],0,[[18,5],6],[[19,5],6],[-1,-1,[]],[-1,-1,[]],[7,[[9,[18,8]]]],[7,[[9,[19,8]]]],[7,[[9,[18,8]]]],[7,[[9,[19,8]]]],[[],[[11,[10]]]],[12,13],[-1,-2,[],[]],[-1,-2,[],[]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,15,[]],[-1,15,[]],[[18,7],[[9,[4,8]]]],[[19,7],[[9,[4,8]]]],[[18,7],[[9,[4,8]]]],[[19,7],[[9,[4,8]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0],"c":[],"p":[[5,"Command",119],[5,"Cli",0],[6,"Command",0],[1,"tuple"],[5,"Formatter",120],[8,"Result",120],[5,"ArgMatches",121],[8,"Error",122],[6,"Result",123],[5,"Id",124],[6,"Option",125],[1,"str"],[1,"bool"],[8,"Result",126],[5,"TypeId",127],[5,"FileBackend",128],[5,"Cleanup",50],[5,"CreateUpload",71],[6,"NameOptions",71],[15,"Random",117],[15,"Name",117]],"b":[]}],\
["bobashare_web",{"doc":"Webserver written with <code>axum</code> which provides a frontend and …","t":"FSSSCOONNHONNOONNNONOOOOCONNNNCNHCKCCNHCGPPPNNHNNNNNNNNNNNNNGFPPNNNNNNOOOONNNNNNNOHNNNONNNNNNNNNNONNPPPPPGFNNNNNNOOOONNNNNNNNONNNOHNNNNNNNNNNONNOOOOHFFFNNNNNNNNOCNNNNCNNNNNNNNNNNNNNNONNHNONNNNNNNNNNNCNNNPFGPPPPPPFPPPGNNNNNNNNONHONNNOONONNNNNNNNNNNONNNNNNOHONONNONNNNNNNNNNNNNNNNNNOOOHHFFFNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNHNNOOOHNNNNOONNNNNNNNNNNNHONNN","n":["AppState","CLASS_STYLE","HIGHLIGHT_CLASS_PREFIX","MARKDOWN_OPTIONS","api","backend","base_url","borrow","borrow_mut","clamp_expiry","cleanup_interval","clone","clone_into","default_expiry","extra_footer_text","fmt","from","from_ref","id_length","into","max_expiry","max_file_size","raw_url","shutdown_tx","static_routes","syntax_set","to_owned","try_from","try_into","type_id","views","vzip","router","v1","ApiErrorExt","delete","info","into_response_with_code","router","upload","DeleteError","IncorrectKey","InternalServer","NotFound","borrow","borrow_mut","delete","fmt","fmt","from","from","from","into","into_response","source","to_string","try_from","try_into","type_id","vzip","InfoError","InfoResponse","InternalServer","NotFound","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","creation_date","direct_url","expiry_date","filename","fmt","fmt","fmt","from","from","from","from_ref","id","info","into","into","into_response","mimetype","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url","vzip","vzip","AlreadyExists","Cancelled","InternalServer","ParseHeader","TooLarge","UploadError","UploadResponse","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","delete_key","direct_url","expiry_date","filename","fmt","fmt","fmt","from","from","from","from","from_ref","id","into","into","into_response","mimetype","put","serialize","source","to_owned","to_string","try_from","try_from","try_into","try_into","type_id","type_id","url","vzip","vzip","max","name","size","source","handler","ErrorResponse","ErrorTemplate","TemplateState","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","code","display","dyn_render","dyn_render_into","dyn_write_into","extension","filters","fmt","fmt","from","from","from","from","from","from","from_ref","icon","into","into","into","into_response","into_response","message","mime_type","render_into","router","size_hint","state","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload","vzip","vzip","vzip","Audio","DisplayTemplate","DisplayType","Image","InternalServer","Markdown","NotFound","Other","Pdf","RawParams","Text","TooLarge","Video","ViewUploadError","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","contents","deserialize","display","download_url","dyn_render","dyn_render_into","dyn_write_into","expiry_date","expiry_relative","extension","filename","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","id","into","into","into","into","into_response","mime_type","mimetype","raw","raw_url","render_into","size","size_hint","source","state","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","displayed","highlighted","highlighted","humanduration","humansize","ExpiryUnit","PasteTemplate","UploadTemplate","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","duration","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_write_into","dyn_write_into","expiry_units","expiry_units","extension","extension","fmt","fmt","fmt","from","from","from","from_ref","into","into","into","into_response","into_response","iter_expiry_units","mime_type","mime_type","name","never_expiry_allowed","never_expiry_allowed","paste","render_into","render_into","size_hint","size_hint","state","state","to_owned","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","upload","value","vzip","vzip","vzip"],"q":[[0,"bobashare_web"],[32,"bobashare_web::api"],[34,"bobashare_web::api::v1"],[40,"bobashare_web::api::v1::delete"],[60,"bobashare_web::api::v1::info"],[100,"bobashare_web::api::v1::upload"],[144,"bobashare_web::api::v1::upload::UploadError"],[148,"bobashare_web::static_routes"],[149,"bobashare_web::views"],[203,"bobashare_web::views::display"],[280,"bobashare_web::views::display::DisplayType"],[283,"bobashare_web::views::filters"],[285,"bobashare_web::views::upload"],[350,"chrono"],[351,"core::option"],[352,"core::fmt"],[353,"core::fmt"],[354,"core::any"],[355,"alloc::sync"],[356,"axum::routing"],[357,"http::status"],[358,"axum_core::response"],[359,"axum::extract::state"],[360,"alloc::string"],[361,"axum::extract::path"],[362,"axum_core::response::into_response"],[363,"anyhow"],[364,"bobashare::storage::file"],[365,"core::error"],[366,"serde::ser"],[367,"axum_extra::typed_header"],[368,"headers::common::content_type"],[369,"axum_extra::typed_header"],[370,"headers::common::content_length"],[371,"http::header::map"],[372,"axum_core::body"],[373,"http::uri"],[374,"askama::error"],[375,"core::fmt"],[376,"std::io::error"],[377,"url"],[378,"core::convert"],[379,"askama::error"],[380,"serde::de"],[381,"bobashare::storage::file"],[382,"chrono::time_delta"],[383,"core::iter::traits::iterator"]],"d":["A struct that contains all the state and config for …","<code>ClassStyle</code> used for <code>syntect</code> highlighting","Prefix for CSS classes used for <code>syntect</code> highlighting","Options used for <code>pulldown_cmark</code> rendering","Public facing REST API for bobashare","storage backend","base URL (ex. <code>http://localhost:3000/</code>)","","","Take the requested expiry, and make sure it’s within the …","how often between each cleanup","","","default expiry time","extra text to display in footer","","Returns the argument unchanged.","","length of randomly generated IDs","Calls <code>U::from(self)</code>.","maximum expiry time (<code>None</code> for no maximum)","maximum file size in bytes","base URL for downloading raw upload files (ex. …","channel to broadcast shutdown – will force all uploads …","","","","","","","Frontend views (as opposed to REST API)","","Routes under <code>/api/</code>","Version 1 of the bobashare API, hosted at <code>/api/v1/</code>","Method to convert an <code>std::error::Error</code> into a <code>Response</code> …","API to delete an upload","API to get metadata about an upload","Consume the error and convert it to a <code>Response</code> with the …","Routes under <code>/api/v1/</code>","API to create an upload","Errors that could occur when deleting an upload","incorrect delete key","internal server error","an upload at the specified id was not found","","","Delete an upload","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Errors when querying info about an upload","Successful upload info API response","internal server error","an upload at the specified id was not found","","","","","","","date the upload was created","direct URL to download the upload file","date the upload expires, or None if it never expires","filename of the uploaded file","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","ID of the upload","Get information (metadata) about an upload","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","MIME type of the file","","","","","","","","","","","URL of the upload","","","an upload already exists with the same id","upload was cancelled","internal server error","error parsing <code>{name}</code> header","file is too large ({size} &gt; {max})","Errors that could occur during upload","The JSON API response after uploading a file","","","","","","","key to delete the upload later before it’s expired","direct url to download the raw uploaded file","expiration date in RFC 3339 format, null if the upload …","the name of the file","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","ID of the upload (used in URL)","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","the MIME type of the uploaded file","Create an upload","","","","","","","","","","","url to the upload","","","","","","","","","","","","","","","","","","","","Routes to display or download an upload in a browser","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","internal server error","","an upload at the specified id was not found","","","","","","","Errors when trying to view/download an upload","","","","","","","","","","","Display an upload as HTML","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Download the raw upload file","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,3,3,3,3,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,0,3,0,0,0,0,0,11,0,0,0,18,18,18,18,18,0,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,23,23,22,23,22,23,22,22,22,22,22,22,22,23,23,22,23,23,22,22,0,22,23,23,22,22,23,22,23,22,23,22,23,22,23,22,22,23,26,26,26,26,26,0,0,25,26,25,26,25,25,25,25,25,25,25,26,26,25,26,26,26,25,25,25,26,26,25,0,25,26,25,26,25,26,25,26,25,26,25,25,26,62,63,62,63,0,0,0,0,42,35,41,42,35,41,35,35,41,0,41,41,41,41,0,35,41,42,42,35,35,35,41,35,35,42,35,41,42,41,41,41,41,0,41,41,35,41,42,35,41,42,35,41,42,35,41,0,42,35,41,52,0,0,52,50,52,50,52,52,0,52,52,52,0,50,51,52,48,50,51,52,48,51,48,0,51,51,51,51,51,51,51,51,50,50,51,52,48,50,50,50,51,52,48,51,50,51,52,48,51,51,51,0,51,51,51,51,50,51,50,51,50,51,52,48,50,51,52,48,50,51,52,48,50,51,52,48,64,65,64,0,0,0,0,0,57,58,59,57,58,59,57,57,57,57,58,59,58,59,58,59,58,59,58,59,57,58,59,57,58,59,57,57,58,59,58,59,0,58,59,57,58,59,0,58,59,58,59,58,59,57,58,59,57,58,59,57,58,59,57,58,59,0,57,57,58,59],"f":[0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[2,[1]],[2,[1]]],[[2,[1]]]],0,[3,3],[[-1,-2],4,[],[]],0,0,[[3,5],6],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],0,[-1,-2,[],[]],[[],[[10,[[9,[3]]]]]],0,0,0,0,[[11,12],13],[[],[[10,[[9,[3]]]]]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[[14,[[9,[3]]]],[16,[15]],15],[[7,[[0,[17]],18]]]],[[18,5],6],[[18,5],6],[-1,-1,[]],[19,18],[20,18],[-1,-2,[],[]],[18,13],[18,[[2,[21]]]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,-2,[],[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[22,22],[[-1,-2],4,[],[]],0,0,0,0,[[22,5],6],[[23,5],6],[[23,5],6],[-1,-1,[]],[19,23],[-1,-1,[]],[-1,-1,[]],0,[[[14,[[9,[3]]]],[16,[15]]],[[7,[[0,[17]],23]]]],[-1,-2,[],[]],[-1,-2,[],[]],[23,13],0,[[22,-1],7,24],[23,[[2,[21]]]],[-1,-2,[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[25,25],[[-1,-2],4,[],[]],0,0,0,0,[[25,5],6],[[26,5],6],[[26,5],6],[-1,-1,[]],[-1,-1,[]],[19,26],[27,26],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[26,13],0,[[[14,[[9,[3]]]],[16,[15]],[30,[[29,[28]],26]],[30,[[29,[31]],26]],32,33],[[7,[[0,[17]],26]]]],[[25,-1],7,24],[26,[[2,[21]]]],[-1,-2,[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,[[34,32],[[0,[17]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[35,35],[[-1,-2],4,[],[]],0,0,[-1,[[7,[15,36]]],[]],[[-1,37],[[7,[4,36]]],[]],[[-1,38],[[7,[4,39]]],[]],[-1,[[2,[40]]],[]],0,[[35,5],6],[[41,5],6],[41,42],[-1,-1,[]],[-1,-1,[]],[3,35],[[[9,[3]]],35],[-1,-1,[]],[-1,-1,[]],[[35,-1],43,[[44,[40]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[42,13],[41,13],0,[-1,40,[]],[[41,-1],[[45,[4]]],[37,46]],[[],[[10,[[9,[3]]]]]],[-1,47,[]],0,[-1,-2,[],[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[7,[48]]],49],[[[14,[[9,[3]]]],[16,[15]]],[[7,[[0,[17]],42]]]],0,[-1,[[7,[15,36]]],[]],[[-1,37],[[7,[4,36]]],[]],[[-1,38],[[7,[4,39]]],[]],0,0,[-1,[[2,[40]]],[]],0,[[50,5],6],[[50,5],6],[[51,5],6],[[52,5],6],[[48,5],6],[19,50],[-1,-1,[]],[53,50],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[51,13],[-1,40,[]],0,[[[14,[[9,[3]]]],[16,[15]],[54,[48]]],[[7,[[0,[17]],42]]]],0,[[51,-1],[[45,[4]]],[37,46]],0,[-1,47,[]],[50,[[2,[21]]]],0,[-1,15,[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[55,[[45,[15]]]],[56,[[45,[15]]]],0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[57,57],[[-1,-2],4,[],[]],0,0,[-1,[[7,[15,36]]],[]],[-1,[[7,[15,36]]],[]],[[-1,37],[[7,[4,36]]],[]],[[-1,37],[[7,[4,36]]],[]],[[-1,38],[[7,[4,39]]],[]],[[-1,38],[[7,[4,39]]],[]],0,0,[-1,[[2,[40]]],[]],[-1,[[2,[40]]],[]],[[57,5],6],[[58,5],6],[[59,5],6],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[58,13],[59,13],[[],[[0,[[61,[],[[60,[57]]]]]]]],[-1,40,[]],[-1,40,[]],0,0,0,[[[14,[[9,[3]]]]],[[7,[[0,[17]],42]]]],[[58,-1],[[45,[4]]],[37,46]],[[59,-1],[[45,[4]]],[37,46]],[-1,47,[]],[-1,47,[]],0,0,[-1,-2,[],[]],[-1,15,[]],[-1,15,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[[[14,[[9,[3]]]]],[[7,[[0,[17]],42]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]]],"c":[],"p":[[8,"Duration",350],[6,"Option",351],[5,"AppState",0],[1,"tuple"],[5,"Formatter",352],[8,"Result",352],[6,"Result",353],[5,"TypeId",354],[5,"Arc",355],[5,"Router",356],[10,"ApiErrorExt",34],[5,"StatusCode",357],[8,"Response",358],[5,"State",359],[5,"String",360],[5,"Path",361],[10,"IntoResponse",362],[6,"DeleteError",40],[5,"Error",363],[6,"DeleteUploadError",364],[10,"Error",365],[5,"InfoResponse",60],[6,"InfoError",60],[10,"Serializer",366],[5,"UploadResponse",100],[6,"UploadError",100],[5,"TypedHeaderRejection",367],[5,"ContentType",368],[5,"TypedHeader",367],[5,"WithRejection",369],[5,"ContentLength",370],[5,"HeaderMap",371],[5,"Body",372],[5,"Uri",373],[5,"TemplateState",149],[6,"Error",374],[10,"Write",352],[10,"Write",375],[5,"Error",376],[1,"str"],[5,"ErrorTemplate",149],[5,"ErrorResponse",149],[5,"Url",377],[10,"AsRef",378],[8,"Result",374],[10,"Sized",379],[1,"usize"],[5,"RawParams",203],[10,"Deserializer",380],[6,"ViewUploadError",203],[5,"DisplayTemplate",203],[6,"DisplayType",203],[6,"OpenUploadError",364],[5,"Query",381],[5,"TimeDelta",382],[1,"u64"],[5,"ExpiryUnit",285],[5,"UploadTemplate",285],[5,"PasteTemplate",285],[17,"Item"],[10,"Iterator",383],[15,"TooLarge",144],[15,"ParseHeader",144],[15,"Markdown",280],[15,"Text",280]],"b":[[47,"impl-Display-for-DeleteError"],[48,"impl-Debug-for-DeleteError"],[50,"impl-From%3CError%3E-for-DeleteError"],[51,"impl-From%3CDeleteUploadError%3E-for-DeleteError"],[75,"impl-Debug-for-InfoError"],[76,"impl-Display-for-InfoError"],[118,"impl-Debug-for-UploadError"],[119,"impl-Display-for-UploadError"],[122,"impl-From%3CError%3E-for-UploadError"],[123,"impl-From%3CTypedHeaderRejection%3E-for-UploadError"],[172,"impl-From%3C%26AppState%3E-for-TemplateState"],[173,"impl-From%3CArc%3CAppState%3E%3E-for-TemplateState"],[236,"impl-Display-for-ViewUploadError"],[237,"impl-Debug-for-ViewUploadError"],[241,"impl-From%3CError%3E-for-ViewUploadError"],[243,"impl-From%3COpenUploadError%3E-for-ViewUploadError"]]}],\
["generate_syntax_css",{"doc":"","t":"H","n":["main"],"q":[[0,"generate_syntax_css"],[1,"anyhow"]],"d":[""],"i":[0],"f":[[[],[[2,[1]]]]],"c":[],"p":[[1,"tuple"],[8,"Result",1]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
