searchState.loadedDescShard("hyper_util", 0, "Utilities for working with hyper.\nRuntime utilities\nServer utilities.\nService utilities.\nTokio IO integration for hyper\nFuture executor that utilises <code>tokio</code> threads.\nA wrapper that implements Tokio’s IO traits for an inner …\nA Timer that uses the tokio runtime.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nBorrow the inner type.\nMut borrow the inner type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume this wrapper and get the inner type.\nCreate new executor that relies on <code>tokio::spawn</code> to execute …\nWrap a type implementing Tokio’s or hyper’s IO traits.\nCreate a new TokioTimer\nConnection utilities.\nHttp1 or Http2 connection.\nHttp1 or Http2 connection builder.\nConnection future.\nHttp1 part of builder.\nExactly equivalent to [<code>Http2ServerConnExec</code>].\nConnection future.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nStart a graceful shutdown process for this connection.\nStart a graceful shutdown process for this connection.\nSet whether HTTP/1 connections should support …\nSet a timeout for reading client request headers. If a …\nHttp1 configuration.\nOnly accepts HTTP/1\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMake this Connection static, instead of borrowing from …\nMake this Connection static, instead of borrowing from …\nEnables or disables HTTP/1 keep-alive.\nSet the maximum buffer size for the connection.\nSet the maximum number of headers.\nCreate a new auto connection builder.\nAggregates flushes to better support pipelined responses.\nSet whether to support preserving original header cases.\nBind a connection together with a <code>Service</code>.\nBind a connection together with a <code>Service</code>.\nBind a connection together with a <code>Service</code>, with the …\nSet the timer used in background tasks.\nSet whether HTTP/1 connections will write header names as …\nUpgrade utilities.\nSet whether HTTP/1 connections should try to use vectored …\nThe deconstructed parts of an <code>Upgraded</code> type.\nTries to downcast the internal trait object to the type …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe original IO object used before the upgrade.\nA buffer of bytes that have been read but not processed as …\nA tower service converted into a hyper service.\nResponse future for <code>TowerToHyperService</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>TowerToHyperService</code> from a tower service.")