searchState.loadedDescShard("onig", 0, "This crate provides a safe wrapper around the Oniguruma …\nCallback both before and after children are walked.\nCallback before children are wallked\nCallback after children are walked\nCapture Tree Node\nCaptures iterator\nCaptures represents a group of captured strings for a …\nThe meta character is set to the chosen <code>char</code>\nByte Buffer\nEncoded String Buffer\nThis struture represents an error from the underlying …\nAn iterator that yields all non-overlapping capture groups …\nAn iterator over all non-overlapping matches for a …\nThe meta character is not enabled\nThe any (.) character for this syntax.\nThe glob character for this syntax (.*)\nThe any number of repeats (*) character for this syntax.\nThe escape charater for this syntax\nThe at least once (+) character for this syntax\nThe optinoal (?) chracter for this syntax\nParameters for a Match or Search.\nMeta Character State\nSyntax meta character types\nNamed and no-named group captured.\nOnly named group captured.\nExtended pattern form.\nFind longest match.\nIgnore empty match.\nAmbiguity match on.\n<code>&#39;.&#39;</code> match with newline.\nClear <code>OPTION_SINGLELINE</code> which is enabled on …\nDefault options.\n<code>&#39;^&#39;</code> -&gt; <code>&#39;\\A&#39;</code>, <code>&#39;$&#39;</code> -&gt; <code>&#39;\\Z&#39;</code>.\nThis struct is a wrapper around an Oniguruma regular …\nRegex parsing and compilation options.\nYields all substrings delimited by a regular expression …\nYields at most <code>N</code> substrings delimited by a regular …\nRepresents a set of capture groups found in a search or …\nReplacer describes types that can be used to replace …\nDefault options.\nString head isn’t considered as begin of line.\nString end isn’t considered as end of line.\n<code>[0-9-a]=[0-9\\-a]</code>\n<code>{,n} =&gt; {0,n}</code>\n<code>{???</code>\n<code>(?&lt;x&gt;)(?&lt;x&gt;)</code>\n<code>...)...</code>\n<code>[..\\w..] etc..</code>\nSee Oniguruma documenation\n<code>?, *, +, {n,m}</code>\n<code>error or ignore</code>\n<code>(?&lt;=a|bc)</code>\n<code>a{n}?=(?:a{n})?</code>\n<code>[^...]</code>\n<code>/(\\1)/,/\\1()/ ..</code>\n<code>[,-,]</code>\n<code>(?:a*)+</code>\n<code>*</code>\n<code>(?@..),(?@&lt;x&gt;..)</code>\n<code>{lower,upper}</code>\n<code>[...]</code>\n<code>[...&amp;&amp;..[..]..]</code>\n<code>\\num</code>\n<code>.</code>\n<code>\\A, \\Z, \\z</code>\n<code>\\{lower,upper\\}</code>\n<code>\\b, \\B</code>\n<code>\\C-x</code>\n<code>\\G</code>\n<code>\\M-x</code>\n<code>\\Q...\\E</code>\n<code>\\n,\\r,\\t,\\a ...</code>\n<code>\\cx</code>\n<code>\\d, \\D</code>\n<code>\\</code>, &#39;`\n<code>\\g&lt;name&gt;, \\g&lt;n&gt;</code>\n<code>\\h, \\H</code>\n<code>\\k&lt;name&gt;</code>\n<code>\\(...\\)</code>\n<code>\\&lt;. \\&gt;</code>\n<code>\\OOO</code>\n<code>\\p{...}, \\P{...}</code>\n<code>\\p{^..}, \\P{^..}</code>\n<code>\\s, \\S</code>\n<code>\\uHHHH</code>\n<code>\\|</code>\n<code>\\v as VTAB</code>\n<code>\\w, \\W</code>\n<code>\\x{7HHHHHHH}</code>\n<code>\\xHH</code>\n<code>\\</code>\n<code>^, $</code>\n<code>(...)</code>\n<code>(?imsx),(?-imsx)</code>\n<code>(?imx), (?-imx)</code>\n<code>+</code>\n<code>{n,m}+</code>\n<code>?+,*+,++</code>\n<code>[:xxxx:]</code>\n?P\n<code>(?...)</code>\n<code>(?&lt;name&gt;...)</code>\n<code>??,*?,+?,{n,m}?</code>\n<code>?</code>\nVariable meta characters\n<code>|</code>\nRegex evaluation options.\nAn iterator over capture groups for a particular match of …\nAn iterator over capture group positions for a particular …\nOnig Syntax Wrapper\nDefines the behaviour of regex operators.\nDefines the different operators allowed within a regex …\nThe order in which traverse callbacks are invoked\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nReturns the set containing all flags.\nGet the Raw <code>OnigMatchParam</code> Pointer\nNew ASCII Buffer\nPlain text syntax\nReturns the matched string for the capture group <code>i</code>. If <code>i</code> …\nRetrieves the syntax behaviours\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nToggles the set of flags.\nGet the current capacity of the region.\nGet the Size of the Capture Histories for this Pattern\nReturns the number of named groups into regex.\nReturns the capture groups corresponding to the …\nReturns an iterator over all the non-overlapping capture …\nGet the Number of Capture Groups in this Pattern\nAn iterator over thie children of this capture group\nThis can be used to clear out a region so it can be used …\nClone From Raw\nReturn Oniguruma engine error code.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nGet Copyright\nDefault syntax (Ruby syntax)\nCreate a User Defined Proeprty\nReturn error description provided by Oniguruma engine.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nDisable a given behaviour for this syntax\nDisable Operators for this Syntax\nEmacs syntax\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nReturns an empty set of flags.\nEnable a given behaviour for this syntax\nEnable Operators for this Syntax\nThe encoding of the contents of the buffer\nThe encoding of the contents of the buffer\nGet the Encoding of the Regex\nFind a Match in a Buffer, With Encoding\nReturns an iterator for each successive non-overlapping …\nFind a Match in a Buffer, With Encoding\nCalls <code>callback</code> for each named group in the regex. Each …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nConvert from underlying bit representation, preserving all …\nNew Buffer from Parts\nGNU regex syntax\nGrep syntax\nThe capture group number for this capture\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nReturns <code>true</code> if all flags are currently set.\nIs the buffer empty?\nIs the buffer empty?\nReturns true if and only if there are no captured groups.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nReturns <code>true</code> if no flags are currently stored.\nCheck if the region is empty.\nDoes the node have any child captures?\nReturns true if and only if the regex matches the string …\nCreates an iterator of all the capture groups in order of …\nGet an iterator over the captures in the region.\nCreates an iterator of all the capture group positions in …\nJava (Sun java.util.regex) syntax\nThe length of this buffer\nReturns the number of captured groups.\nGet the size of the region.\nThe number of child captures this group contains\nPointer to the limit of the pattern buffer\nMatch String with Encoding\nMatch String\nMatch string with encoding and match param\nCreate a new empty <code>Region</code>\nCreate a Regex\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nReturns the complement of this set of flags.\nOffset of the captures within the given string slice.\nOniguruma Syntax\nRetrieve the operators for this syntax\nRetireve the syntax options for this syntax\nPerl syntax\nPerl + named group syntax\nReturns the start and end positions of the Nth capture …\nReturns the start and end positions of the Nth capture …\nThe extent of this capture\nPOSIX Basic RE syntax\nPOSIX Extended RE syntax\nPython syntax\nReturns a possibly owned string that is used to replace …\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nRemoves the specified flags in-place.\nReplaces the leftmost-first match with the replacement …\nReplaces all non-overlapping matches in <code>text</code> with the …\nReplaces at most <code>limit</code> non-overlapping matches in <code>text</code> …\nUpdates the region to contain <code>new_capacity</code> slots. See …\nRuby syntax\nScan a Pattern and Observe Captures\nScan the given slice, capturing into the given region and …\nSearch for a Pattern in a String with an Encoding\nSearch pattern in string\nSearch pattern in string with encoding and match param\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nInserts or removes the specified flags depending on the …\nOverwrite the syntax behaviour for this syntax.\nSet the match stack limit\nSet a given meta character’s state\nReplace the operators for this syntax\nReplace the syntax options for this syntax\nSet the retry limit in match\nReturns an iterator of substrings of <code>text</code> delimited by a …\nReturns an iterator of at most <code>limit</code> substrings of <code>text</code> …\nPointer to the start of the pattern\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nToggles the specified flags in-place.\nGet Capture Tree\nWalk the Tree of Captures\nWalk the Tree of Captures in a Given Order\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nGet Version\nCreate a new region with a given capacity. This function …\nCreate a Regex, Specifying an Encoding\nCreate a new Regex\nCreate a new Regex, Specifying Options and Ecoding")