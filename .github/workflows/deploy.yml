name: Deploy

env:
  CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  docker:
    name: Build Docker image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          tags: ghcr.io/bbaovanc/bobashare:latest
          push: true

  create-empty-release:
    name: Create empty draft release
    runs-on: ubuntu-latest
    steps:
      # create the release once, first
      # otherwise two releases could finish building simultaneously and create two of the new release
      - name: Draft release
        uses: softprops/action-gh-release@v2.0.1
        with:
          draft: true

  release:
    needs: create-empty-release
    strategy:
      fail-fast: false
      matrix:
        build:
          - {os: "ubuntu-latest", target: "x86_64-unknown-linux-musl"}
          - {os: "ubuntu-latest", target: "arm-unknown-linux-musleabihf"}
          - {os: "ubuntu-latest", target: "armv7-unknown-linux-musleabihf"}
          - {os: "ubuntu-latest", target: "aarch64-unknown-linux-musl"}
          - {os: "windows-latest", target: "x86_64-pc-windows-gnu"}
          - {os: "windows-latest", target: "x86_64-pc-windows-msvc"}
          - {os: "macos-latest", target: "x86_64-apple-darwin"}
          - {os: "macos-latest", target: "aarch64-apple-darwin"}
    name: Draft release
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get version name
        id: version
        # thanks windows
        shell: bash
        run: |
          echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_OUTPUT
      - name: Install toolchain
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal
          rustup target add ${{ matrix.build.target }}
      - name: Build
        run: cargo build --target ${{ matrix.build.target }} --release --locked
      - name: Rename binaries (Unix)
        if: ${{ matrix.build.os == 'ubuntu-latest' || matrix.build.os == 'macos-latest' }}
        run: |
          mv target/release/bobashare-admin target/release/bobashare-admin-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}
          mv target/release/bobashare-web target/release/bobashare-web-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}
      - name: Rename binaries (Windows)
        if: ${{ matrix.build.os == 'windows-latest' }}
        run: |
          mv target/release/bobashare-admin.exe target/release/bobashare-admin-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}.exe
          mv target/release/bobashare-web.exe target/release/bobashare-web-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}.exe
      - name: Draft release
        uses: softprops/action-gh-release@v2.0.1
        with:
          draft: true
          files: |
            target/release/bobashare-admin-*
            target/release/bobashare-web-*
