name: CI checks for every commit

on:
  push:
  pull_request:

jobs:
  format:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install toolchain
        run: |
          rustup set auto-self-update disable
          rustup toolchain install nightly --profile minimal
          rustup component add rustfmt --toolchain nightly
      - run: cargo +nightly fmt --all --check

  docker:
    name: Build master Docker image
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/master' }}
    steps:
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/build-push-action@v3
        with:
          tags: ghcr.io/bbaovanc/bobashare:master
          push: true

  build:
    strategy:
      fail-fast: false
      matrix:
        build:
          - {os: "ubuntu-latest", target: "x86_64-unknown-linux-musl"}
          - {os: "ubuntu-latest", target: "arm-unknown-linux-musleabihf"}
          - {os: "ubuntu-latest", target: "armv7-unknown-linux-musleabihf"}
          - {os: "ubuntu-latest", target: "aarch64-unknown-linux-musl"}
          - {os: "windows-latest", target: "x86_64-pc-windows-gnu"}
          - {os: "windows-latest", target: "x86_64-pc-windows-msvc"}
          - {os: "macos-latest", target: "x86_64-apple-darwin"}
          - {os: "macos-latest", target: "aarch64-apple-darwin"}
    name: Build
    runs-on: ${{ matrix.build.os }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Get version name
        id: version
        run: |
          echo "VERSION=$(git describe --tags --dirty)" >> $GITHUB_OUTPUT
      - name: Install toolchain
        run: |
          rustup set auto-self-update disable
          rustup toolchain install stable --profile minimal
          rustup toolchain install nightly --profile minimal
          rustup target add ${{ matrix.build.target }}
          rustup component add clippy --toolchain nightly
      - name: Check
        run: |
          cargo +nightly clippy --locked -- -D warnings
          cargo +nightly clippy --release --locked -- -D warnings
      - name: Build
        if: always()
        run: |
          cargo build --locked
          cargo build --release --locked
      - name: Test
        run: |
          cargo test --locked
          cargo test --release --locked
      - name: Upload debug artifacts
        uses: actions/upload-artifact@v3
        with:
          name: debug-build-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}
          path: |
            target/debug/bobashare-admin
            target/debug/bobashare-web
            target/debug/bobashare-admin.exe
            target/debug/bobashare-web.exe
      - name: Upload release artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-build-${{ steps.version.outputs.VERSION }}-${{ matrix.build.target }}
          path: |
            target/release/bobashare-admin
            target/release/bobashare-web
            target/release/bobashare-admin.exe
            target/release/bobashare-web.exe
